; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f10x_exti.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Board\inc -I..\Chip\Hal_lib\inc -I..\Chip\Startup\inc -I..\coremark -I..\Chip\CMSIS -I.\RTE\_CoreMark -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F10X_MD --omf_browse=.\objects\stm32f10x_exti.crf ..\Chip\Hal_lib\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;208      */
;;;209    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  b510              PUSH     {r4,lr}
;;;210    {
000002  4604              MOV      r4,r0
;;;211      /* Check the parameters */
;;;212      assert_param(IS_EXTI_LINE(EXTI_Line));
000004  0d21              LSRS     r1,r4,#20
000006  0509              LSLS     r1,r1,#20
000008  b911              CBNZ     r1,|L1.16|
00000a  b10c              CBZ      r4,|L1.16|
00000c  2101              MOVS     r1,#1
00000e  e000              B        |L1.18|
                  |L1.16|
000010  2100              MOVS     r1,#0
                  |L1.18|
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       assert_param
;;;213      
;;;214      EXTI->PR = EXTI_Line;
000018  4801              LDR      r0,|L1.32|
00001a  6004              STR      r4,[r0,#0]
;;;215    }
00001c  bd10              POP      {r4,pc}
;;;216    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;248      */
;;;249    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  b510              PUSH     {r4,lr}
;;;250    {
000002  4604              MOV      r4,r0
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
000004  0d21              LSRS     r1,r4,#20
000006  0509              LSLS     r1,r1,#20
000008  b911              CBNZ     r1,|L2.16|
00000a  b10c              CBZ      r4,|L2.16|
00000c  2101              MOVS     r1,#1
00000e  e000              B        |L2.18|
                  |L2.16|
000010  2100              MOVS     r1,#0
                  |L2.18|
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       assert_param
;;;253      
;;;254      EXTI->PR = EXTI_Line;
000018  4801              LDR      r0,|L2.32|
00001a  6004              STR      r4,[r0,#0]
;;;255    }
00001c  bd10              POP      {r4,pc}
;;;256    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;84       */
;;;85     void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;86     {
;;;87       EXTI->IMR = 0x00000000;
000002  4906              LDR      r1,|L3.28|
000004  6008              STR      r0,[r1,#0]
;;;88       EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;89       EXTI->RTSR = 0x00000000; 
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;90       EXTI->FTSR = 0x00000000; 
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;91       EXTI->PR = 0x000FFFFF;
000012  4803              LDR      r0,|L3.32|
000014  4901              LDR      r1,|L3.28|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;92     }
00001a  4770              BX       lr
;;;93     
                          ENDP

                  |L3.28|
                          DCD      0x40010400
                  |L3.32|
                          DCD      0x000fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;170      */
;;;171    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  b510              PUSH     {r4,lr}
;;;172    {
000002  4604              MOV      r4,r0
;;;173      /* Check the parameters */
;;;174      assert_param(IS_EXTI_LINE(EXTI_Line));
000004  0d21              LSRS     r1,r4,#20
000006  0509              LSLS     r1,r1,#20
000008  b911              CBNZ     r1,|L4.16|
00000a  b10c              CBZ      r4,|L4.16|
00000c  2101              MOVS     r1,#1
00000e  e000              B        |L4.18|
                  |L4.16|
000010  2100              MOVS     r1,#0
                  |L4.18|
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       assert_param
;;;175      
;;;176      EXTI->SWIER |= EXTI_Line;
000018  4802              LDR      r0,|L4.36|
00001a  6800              LDR      r0,[r0,#0]
00001c  4320              ORRS     r0,r0,r4
00001e  4901              LDR      r1,|L4.36|
000020  6008              STR      r0,[r1,#0]
;;;177    }
000022  bd10              POP      {r4,pc}
;;;178    
                          ENDP

                  |L4.36|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;185      */
;;;186    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  b570              PUSH     {r4-r6,lr}
;;;187    {
000002  4604              MOV      r4,r0
;;;188      FlagStatus bitstatus = RESET;
000004  2500              MOVS     r5,#0
;;;189      /* Check the parameters */
;;;190      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
000006  2c01              CMP      r4,#1
000008  d031              BEQ      |L5.110|
00000a  2c02              CMP      r4,#2
00000c  d02f              BEQ      |L5.110|
00000e  2c04              CMP      r4,#4
000010  d02d              BEQ      |L5.110|
000012  2c08              CMP      r4,#8
000014  d02b              BEQ      |L5.110|
000016  2c10              CMP      r4,#0x10
000018  d029              BEQ      |L5.110|
00001a  2c20              CMP      r4,#0x20
00001c  d027              BEQ      |L5.110|
00001e  2c40              CMP      r4,#0x40
000020  d025              BEQ      |L5.110|
000022  2c80              CMP      r4,#0x80
000024  d023              BEQ      |L5.110|
000026  f5b47f80          CMP      r4,#0x100
00002a  d020              BEQ      |L5.110|
00002c  f5b47f00          CMP      r4,#0x200
000030  d01d              BEQ      |L5.110|
000032  f5b46f80          CMP      r4,#0x400
000036  d01a              BEQ      |L5.110|
000038  f5b46f00          CMP      r4,#0x800
00003c  d017              BEQ      |L5.110|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d014              BEQ      |L5.110|
000044  f5b45f00          CMP      r4,#0x2000
000048  d011              BEQ      |L5.110|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d00e              BEQ      |L5.110|
000050  f5b44f00          CMP      r4,#0x8000
000054  d00b              BEQ      |L5.110|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d008              BEQ      |L5.110|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d005              BEQ      |L5.110|
000062  f5b42f80          CMP      r4,#0x40000
000066  d002              BEQ      |L5.110|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d101              BNE      |L5.114|
                  |L5.110|
00006e  2101              MOVS     r1,#1
000070  e000              B        |L5.116|
                  |L5.114|
000072  2100              MOVS     r1,#0
                  |L5.116|
000074  4608              MOV      r0,r1
000076  f7fffffe          BL       assert_param
;;;191      
;;;192      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
00007a  4804              LDR      r0,|L5.140|
00007c  6800              LDR      r0,[r0,#0]
00007e  4020              ANDS     r0,r0,r4
000080  b108              CBZ      r0,|L5.134|
;;;193      {
;;;194        bitstatus = SET;
000082  2501              MOVS     r5,#1
000084  e000              B        |L5.136|
                  |L5.134|
;;;195      }
;;;196      else
;;;197      {
;;;198        bitstatus = RESET;
000086  2500              MOVS     r5,#0
                  |L5.136|
;;;199      }
;;;200      return bitstatus;
000088  4628              MOV      r0,r5
;;;201    }
00008a  bd70              POP      {r4-r6,pc}
;;;202    
                          ENDP

                  |L5.140|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;223      */
;;;224    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  b570              PUSH     {r4-r6,lr}
;;;225    {
000002  4604              MOV      r4,r0
;;;226      ITStatus bitstatus = RESET;
000004  2500              MOVS     r5,#0
;;;227      uint32_t enablestatus = 0;
000006  2600              MOVS     r6,#0
;;;228      /* Check the parameters */
;;;229      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
000008  2c01              CMP      r4,#1
00000a  d031              BEQ      |L6.112|
00000c  2c02              CMP      r4,#2
00000e  d02f              BEQ      |L6.112|
000010  2c04              CMP      r4,#4
000012  d02d              BEQ      |L6.112|
000014  2c08              CMP      r4,#8
000016  d02b              BEQ      |L6.112|
000018  2c10              CMP      r4,#0x10
00001a  d029              BEQ      |L6.112|
00001c  2c20              CMP      r4,#0x20
00001e  d027              BEQ      |L6.112|
000020  2c40              CMP      r4,#0x40
000022  d025              BEQ      |L6.112|
000024  2c80              CMP      r4,#0x80
000026  d023              BEQ      |L6.112|
000028  f5b47f80          CMP      r4,#0x100
00002c  d020              BEQ      |L6.112|
00002e  f5b47f00          CMP      r4,#0x200
000032  d01d              BEQ      |L6.112|
000034  f5b46f80          CMP      r4,#0x400
000038  d01a              BEQ      |L6.112|
00003a  f5b46f00          CMP      r4,#0x800
00003e  d017              BEQ      |L6.112|
000040  f5b45f80          CMP      r4,#0x1000
000044  d014              BEQ      |L6.112|
000046  f5b45f00          CMP      r4,#0x2000
00004a  d011              BEQ      |L6.112|
00004c  f5b44f80          CMP      r4,#0x4000
000050  d00e              BEQ      |L6.112|
000052  f5b44f00          CMP      r4,#0x8000
000056  d00b              BEQ      |L6.112|
000058  f5b43f80          CMP      r4,#0x10000
00005c  d008              BEQ      |L6.112|
00005e  f5b43f00          CMP      r4,#0x20000
000062  d005              BEQ      |L6.112|
000064  f5b42f80          CMP      r4,#0x40000
000068  d002              BEQ      |L6.112|
00006a  f5b42f00          CMP      r4,#0x80000
00006e  d101              BNE      |L6.116|
                  |L6.112|
000070  2101              MOVS     r1,#1
000072  e000              B        |L6.118|
                  |L6.116|
000074  2100              MOVS     r1,#0
                  |L6.118|
000076  4608              MOV      r0,r1
000078  f7fffffe          BL       assert_param
;;;230      
;;;231      enablestatus =  EXTI->IMR & EXTI_Line;
00007c  4807              LDR      r0,|L6.156|
00007e  6800              LDR      r0,[r0,#0]
000080  ea000604          AND      r6,r0,r4
;;;232      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000084  4805              LDR      r0,|L6.156|
000086  3014              ADDS     r0,r0,#0x14
000088  6800              LDR      r0,[r0,#0]
00008a  4020              ANDS     r0,r0,r4
00008c  b110              CBZ      r0,|L6.148|
00008e  b10e              CBZ      r6,|L6.148|
;;;233      {
;;;234        bitstatus = SET;
000090  2501              MOVS     r5,#1
000092  e000              B        |L6.150|
                  |L6.148|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
000094  2500              MOVS     r5,#0
                  |L6.150|
;;;239      }
;;;240      return bitstatus;
000096  4628              MOV      r0,r5
;;;241    }
000098  bd70              POP      {r4-r6,pc}
;;;242    
                          ENDP

00009a  0000              DCW      0x0000
                  |L6.156|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;100      */
;;;101    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;102    {
000002  4604              MOV      r4,r0
;;;103      uint32_t tmp = 0;
000004  2500              MOVS     r5,#0
;;;104    
;;;105      /* Check the parameters */
;;;106      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
000006  7921              LDRB     r1,[r4,#4]
000008  b111              CBZ      r1,|L7.16|
00000a  7921              LDRB     r1,[r4,#4]
00000c  2904              CMP      r1,#4
00000e  d101              BNE      |L7.20|
                  |L7.16|
000010  2101              MOVS     r1,#1
000012  e000              B        |L7.22|
                  |L7.20|
000014  2100              MOVS     r1,#0
                  |L7.22|
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       assert_param
;;;107      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
00001c  7961              LDRB     r1,[r4,#5]
00001e  2908              CMP      r1,#8
000020  d005              BEQ      |L7.46|
000022  7961              LDRB     r1,[r4,#5]
000024  290c              CMP      r1,#0xc
000026  d002              BEQ      |L7.46|
000028  7961              LDRB     r1,[r4,#5]
00002a  2910              CMP      r1,#0x10
00002c  d101              BNE      |L7.50|
                  |L7.46|
00002e  2101              MOVS     r1,#1
000030  e000              B        |L7.52|
                  |L7.50|
000032  2100              MOVS     r1,#0
                  |L7.52|
000034  4608              MOV      r0,r1
000036  f7fffffe          BL       assert_param
;;;108      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
00003a  6821              LDR      r1,[r4,#0]
00003c  f36f0113          BFC      r1,#0,#20
000040  b919              CBNZ     r1,|L7.74|
000042  6821              LDR      r1,[r4,#0]
000044  b109              CBZ      r1,|L7.74|
000046  2101              MOVS     r1,#1
000048  e000              B        |L7.76|
                  |L7.74|
00004a  2100              MOVS     r1,#0
                  |L7.76|
00004c  4608              MOV      r0,r1
00004e  f7fffffe          BL       assert_param
;;;109      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
000052  79a1              LDRB     r1,[r4,#6]
000054  b111              CBZ      r1,|L7.92|
000056  79a1              LDRB     r1,[r4,#6]
000058  2901              CMP      r1,#1
00005a  d101              BNE      |L7.96|
                  |L7.92|
00005c  2101              MOVS     r1,#1
00005e  e000              B        |L7.98|
                  |L7.96|
000060  2100              MOVS     r1,#0
                  |L7.98|
000062  4608              MOV      r0,r1
000064  f7fffffe          BL       assert_param
;;;110    
;;;111      tmp = (uint32_t)EXTI_BASE;
000068  4d22              LDR      r5,|L7.244|
;;;112         
;;;113      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
00006a  79a0              LDRB     r0,[r4,#6]
00006c  b390              CBZ      r0,|L7.212|
;;;114      {
;;;115        /* Clear EXTI line configuration */
;;;116        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00006e  4628              MOV      r0,r5
000070  6800              LDR      r0,[r0,#0]
000072  6821              LDR      r1,[r4,#0]
000074  4388              BICS     r0,r0,r1
000076  4629              MOV      r1,r5
000078  6008              STR      r0,[r1,#0]
;;;117        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
00007a  1d08              ADDS     r0,r1,#4
00007c  6800              LDR      r0,[r0,#0]
00007e  6821              LDR      r1,[r4,#0]
000080  4388              BICS     r0,r0,r1
000082  1d29              ADDS     r1,r5,#4
000084  6008              STR      r0,[r1,#0]
;;;118        
;;;119        tmp += EXTI_InitStruct->EXTI_Mode;
000086  7920              LDRB     r0,[r4,#4]
000088  4405              ADD      r5,r5,r0
;;;120    
;;;121        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00008a  6828              LDR      r0,[r5,#0]
00008c  6821              LDR      r1,[r4,#0]
00008e  4308              ORRS     r0,r0,r1
000090  6028              STR      r0,[r5,#0]
;;;122    
;;;123        /* Clear Rising Falling edge configuration */
;;;124        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000092  4818              LDR      r0,|L7.244|
000094  3008              ADDS     r0,r0,#8
000096  6800              LDR      r0,[r0,#0]
000098  6821              LDR      r1,[r4,#0]
00009a  4388              BICS     r0,r0,r1
00009c  4915              LDR      r1,|L7.244|
00009e  3108              ADDS     r1,r1,#8
0000a0  6008              STR      r0,[r1,#0]
;;;125        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
0000a2  1d08              ADDS     r0,r1,#4
0000a4  6800              LDR      r0,[r0,#0]
0000a6  6821              LDR      r1,[r4,#0]
0000a8  4388              BICS     r0,r0,r1
0000aa  4912              LDR      r1,|L7.244|
0000ac  310c              ADDS     r1,r1,#0xc
0000ae  6008              STR      r0,[r1,#0]
;;;126        
;;;127        /* Select the trigger for the selected external interrupts */
;;;128        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
0000b0  7960              LDRB     r0,[r4,#5]
0000b2  2810              CMP      r0,#0x10
0000b4  d10f              BNE      |L7.214|
;;;129        {
;;;130          /* Rising Falling edge */
;;;131          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
0000b6  1f08              SUBS     r0,r1,#4
0000b8  6800              LDR      r0,[r0,#0]
0000ba  6821              LDR      r1,[r4,#0]
0000bc  4308              ORRS     r0,r0,r1
0000be  490d              LDR      r1,|L7.244|
0000c0  3108              ADDS     r1,r1,#8
0000c2  6008              STR      r0,[r1,#0]
;;;132          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
0000c4  1d08              ADDS     r0,r1,#4
0000c6  6800              LDR      r0,[r0,#0]
0000c8  6821              LDR      r1,[r4,#0]
0000ca  4308              ORRS     r0,r0,r1
0000cc  4909              LDR      r1,|L7.244|
0000ce  310c              ADDS     r1,r1,#0xc
0000d0  6008              STR      r0,[r1,#0]
0000d2  e00e              B        |L7.242|
                  |L7.212|
0000d4  e007              B        |L7.230|
                  |L7.214|
;;;133        }
;;;134        else
;;;135        {
;;;136          tmp = (uint32_t)EXTI_BASE;
0000d6  4d07              LDR      r5,|L7.244|
;;;137          tmp += EXTI_InitStruct->EXTI_Trigger;
0000d8  7960              LDRB     r0,[r4,#5]
0000da  4405              ADD      r5,r5,r0
;;;138    
;;;139          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
0000dc  6828              LDR      r0,[r5,#0]
0000de  6821              LDR      r1,[r4,#0]
0000e0  4308              ORRS     r0,r0,r1
0000e2  6028              STR      r0,[r5,#0]
0000e4  e005              B        |L7.242|
                  |L7.230|
;;;140        }
;;;141      }
;;;142      else
;;;143      {
;;;144        tmp += EXTI_InitStruct->EXTI_Mode;
0000e6  7920              LDRB     r0,[r4,#4]
0000e8  4405              ADD      r5,r5,r0
;;;145    
;;;146        /* Disable the selected external lines */
;;;147        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
0000ea  6828              LDR      r0,[r5,#0]
0000ec  6821              LDR      r1,[r4,#0]
0000ee  4388              BICS     r0,r0,r1
0000f0  6028              STR      r0,[r5,#0]
                  |L7.242|
;;;148      }
;;;149    }
0000f2  bd70              POP      {r4-r6,pc}
;;;150    
                          ENDP

                  |L7.244|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;156      */
;;;157    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;158    {
;;;159      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
000002  6001              STR      r1,[r0,#0]
;;;160      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;161      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;162      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;163    }
00000e  4770              BX       lr
;;;164    
                          ENDP

