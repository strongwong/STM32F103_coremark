; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f10x_dbgmcu.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f10x_dbgmcu.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Board\inc -I..\Chip\Hal_lib\inc -I..\Chip\Startup\inc -I..\coremark -I..\Chip\CMSIS -I.\RTE\_CoreMark -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F10X_MD --omf_browse=.\objects\stm32f10x_dbgmcu.crf ..\Chip\Hal_lib\stm32f10x_dbgmcu.c]
                          THUMB

                          AREA ||i.DBGMCU_Config||, CODE, READONLY, ALIGN=2

                  DBGMCU_Config PROC
;;;133      */
;;;134    void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;135    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;136      /* Check the parameters */
;;;137      assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
000006  4910              LDR      r1,|L1.72|
000008  4021              ANDS     r1,r1,r4
00000a  b911              CBNZ     r1,|L1.18|
00000c  b10c              CBZ      r4,|L1.18|
00000e  2101              MOVS     r1,#1
000010  e000              B        |L1.20|
                  |L1.18|
000012  2100              MOVS     r1,#0
                  |L1.20|
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       assert_param
;;;138      assert_param(IS_FUNCTIONAL_STATE(NewState));
00001a  b10d              CBZ      r5,|L1.32|
00001c  2d01              CMP      r5,#1
00001e  d101              BNE      |L1.36|
                  |L1.32|
000020  2101              MOVS     r1,#1
000022  e000              B        |L1.38|
                  |L1.36|
000024  2100              MOVS     r1,#0
                  |L1.38|
000026  4608              MOV      r0,r1
000028  f7fffffe          BL       assert_param
;;;139    
;;;140      if (NewState != DISABLE)
00002c  b12d              CBZ      r5,|L1.58|
;;;141      {
;;;142        DBGMCU->CR |= DBGMCU_Periph;
00002e  4807              LDR      r0,|L1.76|
000030  6840              LDR      r0,[r0,#4]
000032  4320              ORRS     r0,r0,r4
000034  4905              LDR      r1,|L1.76|
000036  6048              STR      r0,[r1,#4]
000038  e004              B        |L1.68|
                  |L1.58|
;;;143      }
;;;144      else
;;;145      {
;;;146        DBGMCU->CR &= ~DBGMCU_Periph;
00003a  4804              LDR      r0,|L1.76|
00003c  6840              LDR      r0,[r0,#4]
00003e  43a0              BICS     r0,r0,r4
000040  4902              LDR      r1,|L1.76|
000042  6048              STR      r0,[r1,#4]
                  |L1.68|
;;;147      }
;;;148    }
000044  bd70              POP      {r4-r6,pc}
;;;149    
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      0x800000f8
                  |L1.76|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetDEVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetDEVID PROC
;;;93       */
;;;94     uint32_t DBGMCU_GetDEVID(void)
000000  4802              LDR      r0,|L2.12|
;;;95     {
;;;96        return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
000002  6800              LDR      r0,[r0,#0]
000004  f3c0000b          UBFX     r0,r0,#0,#12
;;;97     }
000008  4770              BX       lr
;;;98     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetREVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;83       */
;;;84     uint32_t DBGMCU_GetREVID(void)
000000  4801              LDR      r0,|L3.8|
;;;85     {
;;;86        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;87     }
000006  4770              BX       lr
;;;88     
                          ENDP

                  |L3.8|
                          DCD      0xe0042000
