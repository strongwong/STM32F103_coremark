; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f10x_sdio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f10x_sdio.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Board\inc -I..\Chip\Hal_lib\inc -I..\Chip\Startup\inc -I..\coremark -I..\Chip\CMSIS -I.\RTE\_CoreMark -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F10X_MD --omf_browse=.\objects\stm32f10x_sdio.crf ..\Chip\Hal_lib\stm32f10x_sdio.c]
                          THUMB

                          AREA ||i.SDIO_CEATAITCmd||, CODE, READONLY, ALIGN=2

                  SDIO_CEATAITCmd PROC
;;;613      */
;;;614    void SDIO_CEATAITCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;615    { 
000002  4604              MOV      r4,r0
;;;616      /* Check the parameters */
;;;617      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L1.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L1.14|
                  |L1.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L1.16|
                  |L1.14|
00000e  2100              MOVS     r1,#0
                  |L1.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;618      
;;;619      *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
000016  2001              MOVS     r0,#1
000018  43a0              BICS     r0,r0,r4
00001a  4901              LDR      r1,|L1.32|
00001c  6008              STR      r0,[r1,#0]
;;;620    }
00001e  bd10              POP      {r4,pc}
;;;621    
                          ENDP

                  |L1.32|
                          DCD      0x423001b4

                          AREA ||i.SDIO_ClearFlag||, CODE, READONLY, ALIGN=2

                  SDIO_ClearFlag PROC
;;;703      */
;;;704    void SDIO_ClearFlag(uint32_t SDIO_FLAG)
000000  b510              PUSH     {r4,lr}
;;;705    { 
000002  4604              MOV      r4,r0
;;;706      /* Check the parameters */
;;;707      assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
000004  4906              LDR      r1,|L2.32|
000006  4021              ANDS     r1,r1,r4
000008  b911              CBNZ     r1,|L2.16|
00000a  b10c              CBZ      r4,|L2.16|
00000c  2101              MOVS     r1,#1
00000e  e000              B        |L2.18|
                  |L2.16|
000010  2100              MOVS     r1,#0
                  |L2.18|
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       assert_param
;;;708       
;;;709      SDIO->ICR = SDIO_FLAG;
000018  4802              LDR      r0,|L2.36|
00001a  6384              STR      r4,[r0,#0x38]
;;;710    }
00001c  bd10              POP      {r4,pc}
;;;711    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0xff3ff800
                  |L2.36|
                          DCD      0x40018000

                          AREA ||i.SDIO_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  SDIO_ClearITPendingBit PROC
;;;778      */
;;;779    void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
000000  b510              PUSH     {r4,lr}
;;;780    { 
000002  4604              MOV      r4,r0
;;;781      /* Check the parameters */
;;;782      assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
000004  4906              LDR      r1,|L3.32|
000006  4021              ANDS     r1,r1,r4
000008  b911              CBNZ     r1,|L3.16|
00000a  b10c              CBZ      r4,|L3.16|
00000c  2101              MOVS     r1,#1
00000e  e000              B        |L3.18|
                  |L3.16|
000010  2100              MOVS     r1,#0
                  |L3.18|
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       assert_param
;;;783       
;;;784      SDIO->ICR = SDIO_IT;
000018  4802              LDR      r0,|L3.36|
00001a  6384              STR      r4,[r0,#0x38]
;;;785    }
00001c  bd10              POP      {r4,pc}
;;;786    
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0xff3ff800
                  |L3.36|
                          DCD      0x40018000

                          AREA ||i.SDIO_ClockCmd||, CODE, READONLY, ALIGN=2

                  SDIO_ClockCmd PROC
;;;234      */
;;;235    void SDIO_ClockCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;236    {
000002  4604              MOV      r4,r0
;;;237      /* Check the parameters */
;;;238      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L4.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L4.14|
                  |L4.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L4.16|
                  |L4.14|
00000e  2100              MOVS     r1,#0
                  |L4.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;239      
;;;240      *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
000016  4801              LDR      r0,|L4.28|
000018  6004              STR      r4,[r0,#0]
;;;241    }
00001a  bd10              POP      {r4,pc}
;;;242    
                          ENDP

                  |L4.28|
                          DCD      0x423000a0

                          AREA ||i.SDIO_CmdStructInit||, CODE, READONLY, ALIGN=1

                  SDIO_CmdStructInit PROC
;;;381      */
;;;382    void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
000000  2100              MOVS     r1,#0
;;;383    {
;;;384      /* SDIO_CmdInitStruct members default value */
;;;385      SDIO_CmdInitStruct->SDIO_Argument = 0x00;
000002  6001              STR      r1,[r0,#0]
;;;386      SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
000004  6041              STR      r1,[r0,#4]
;;;387      SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
000006  6081              STR      r1,[r0,#8]
;;;388      SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
000008  60c1              STR      r1,[r0,#0xc]
;;;389      SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
00000a  6101              STR      r1,[r0,#0x10]
;;;390    }
00000c  4770              BX       lr
;;;391    
                          ENDP


                          AREA ||i.SDIO_CommandCompletionCmd||, CODE, READONLY, ALIGN=2

                  SDIO_CommandCompletionCmd PROC
;;;600      */
;;;601    void SDIO_CommandCompletionCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;602    { 
000002  4604              MOV      r4,r0
;;;603      /* Check the parameters */
;;;604      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L6.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L6.14|
                  |L6.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L6.16|
                  |L6.14|
00000e  2100              MOVS     r1,#0
                  |L6.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;605      
;;;606      *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
000016  4801              LDR      r0,|L6.28|
000018  6004              STR      r4,[r0,#0]
;;;607    }
00001a  bd10              POP      {r4,pc}
;;;608    
                          ENDP

                  |L6.28|
                          DCD      0x423001b0

                          AREA ||i.SDIO_DMACmd||, CODE, READONLY, ALIGN=2

                  SDIO_DMACmd PROC
;;;330      */
;;;331    void SDIO_DMACmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;332    {
000002  4604              MOV      r4,r0
;;;333      /* Check the parameters */
;;;334      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L7.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L7.14|
                  |L7.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L7.16|
                  |L7.14|
00000e  2100              MOVS     r1,#0
                  |L7.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;335      
;;;336      *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
000016  4801              LDR      r0,|L7.28|
000018  6004              STR      r4,[r0,#0]
;;;337    }
00001a  bd10              POP      {r4,pc}
;;;338    
                          ENDP

                  |L7.28|
                          DCD      0x4230058c

                          AREA ||i.SDIO_DataConfig||, CODE, READONLY, ALIGN=2

                  SDIO_DataConfig PROC
;;;430      */
;;;431    void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;432    {
000002  4604              MOV      r4,r0
;;;433      uint32_t tmpreg = 0;
000004  2500              MOVS     r5,#0
;;;434      
;;;435      /* Check the parameters */
;;;436      assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
000006  6861              LDR      r1,[r4,#4]
000008  f1b17f00          CMP      r1,#0x2000000
00000c  d201              BCS      |L8.18|
00000e  2101              MOVS     r1,#1
000010  e000              B        |L8.20|
                  |L8.18|
000012  2100              MOVS     r1,#0
                  |L8.20|
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       assert_param
;;;437      assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
00001a  68a1              LDR      r1,[r4,#8]
00001c  b349              CBZ      r1,|L8.114|
00001e  68a1              LDR      r1,[r4,#8]
000020  2910              CMP      r1,#0x10
000022  d026              BEQ      |L8.114|
000024  68a1              LDR      r1,[r4,#8]
000026  2920              CMP      r1,#0x20
000028  d023              BEQ      |L8.114|
00002a  68a1              LDR      r1,[r4,#8]
00002c  2930              CMP      r1,#0x30
00002e  d020              BEQ      |L8.114|
000030  68a1              LDR      r1,[r4,#8]
000032  2940              CMP      r1,#0x40
000034  d01d              BEQ      |L8.114|
000036  68a1              LDR      r1,[r4,#8]
000038  2950              CMP      r1,#0x50
00003a  d01a              BEQ      |L8.114|
00003c  68a1              LDR      r1,[r4,#8]
00003e  2960              CMP      r1,#0x60
000040  d017              BEQ      |L8.114|
000042  68a1              LDR      r1,[r4,#8]
000044  2970              CMP      r1,#0x70
000046  d014              BEQ      |L8.114|
000048  68a1              LDR      r1,[r4,#8]
00004a  2980              CMP      r1,#0x80
00004c  d011              BEQ      |L8.114|
00004e  68a1              LDR      r1,[r4,#8]
000050  2990              CMP      r1,#0x90
000052  d00e              BEQ      |L8.114|
000054  68a1              LDR      r1,[r4,#8]
000056  29a0              CMP      r1,#0xa0
000058  d00b              BEQ      |L8.114|
00005a  68a1              LDR      r1,[r4,#8]
00005c  29b0              CMP      r1,#0xb0
00005e  d008              BEQ      |L8.114|
000060  68a1              LDR      r1,[r4,#8]
000062  29c0              CMP      r1,#0xc0
000064  d005              BEQ      |L8.114|
000066  68a1              LDR      r1,[r4,#8]
000068  29d0              CMP      r1,#0xd0
00006a  d002              BEQ      |L8.114|
00006c  68a1              LDR      r1,[r4,#8]
00006e  29e0              CMP      r1,#0xe0
000070  d101              BNE      |L8.118|
                  |L8.114|
000072  2101              MOVS     r1,#1
000074  e000              B        |L8.120|
                  |L8.118|
000076  2100              MOVS     r1,#0
                  |L8.120|
000078  4608              MOV      r0,r1
00007a  f7fffffe          BL       assert_param
;;;438      assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
00007e  68e1              LDR      r1,[r4,#0xc]
000080  b111              CBZ      r1,|L8.136|
000082  68e1              LDR      r1,[r4,#0xc]
000084  2902              CMP      r1,#2
000086  d101              BNE      |L8.140|
                  |L8.136|
000088  2101              MOVS     r1,#1
00008a  e000              B        |L8.142|
                  |L8.140|
00008c  2100              MOVS     r1,#0
                  |L8.142|
00008e  4608              MOV      r0,r1
000090  f7fffffe          BL       assert_param
;;;439      assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
000094  6921              LDR      r1,[r4,#0x10]
000096  2904              CMP      r1,#4
000098  d001              BEQ      |L8.158|
00009a  6921              LDR      r1,[r4,#0x10]
00009c  b909              CBNZ     r1,|L8.162|
                  |L8.158|
00009e  2101              MOVS     r1,#1
0000a0  e000              B        |L8.164|
                  |L8.162|
0000a2  2100              MOVS     r1,#0
                  |L8.164|
0000a4  4608              MOV      r0,r1
0000a6  f7fffffe          BL       assert_param
;;;440      assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
0000aa  6961              LDR      r1,[r4,#0x14]
0000ac  2901              CMP      r1,#1
0000ae  d001              BEQ      |L8.180|
0000b0  6961              LDR      r1,[r4,#0x14]
0000b2  b909              CBNZ     r1,|L8.184|
                  |L8.180|
0000b4  2101              MOVS     r1,#1
0000b6  e000              B        |L8.186|
                  |L8.184|
0000b8  2100              MOVS     r1,#0
                  |L8.186|
0000ba  4608              MOV      r0,r1
0000bc  f7fffffe          BL       assert_param
;;;441    
;;;442    /*---------------------------- SDIO DTIMER Configuration ---------------------*/
;;;443      /* Set the SDIO Data TimeOut value */
;;;444      SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
0000c0  4909              LDR      r1,|L8.232|
0000c2  6820              LDR      r0,[r4,#0]
0000c4  6248              STR      r0,[r1,#0x24]
;;;445    
;;;446    /*---------------------------- SDIO DLEN Configuration -----------------------*/
;;;447      /* Set the SDIO DataLength value */
;;;448      SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
0000c6  6860              LDR      r0,[r4,#4]
0000c8  6288              STR      r0,[r1,#0x28]
;;;449    
;;;450    /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
;;;451      /* Get the SDIO DCTRL value */
;;;452      tmpreg = SDIO->DCTRL;
0000ca  4608              MOV      r0,r1
0000cc  6ac5              LDR      r5,[r0,#0x2c]
;;;453      /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
;;;454      tmpreg &= DCTRL_CLEAR_MASK;
0000ce  f02505f7          BIC      r5,r5,#0xf7
;;;455      /* Set DEN bit according to SDIO_DPSM value */
;;;456      /* Set DTMODE bit according to SDIO_TransferMode value */
;;;457      /* Set DTDIR bit according to SDIO_TransferDir value */
;;;458      /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
;;;459      tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferDir
0000d2  e9d40102          LDRD     r0,r1,[r4,#8]
0000d6  4308              ORRS     r0,r0,r1
0000d8  6921              LDR      r1,[r4,#0x10]
0000da  4308              ORRS     r0,r0,r1
0000dc  6961              LDR      r1,[r4,#0x14]
0000de  4308              ORRS     r0,r0,r1
0000e0  4305              ORRS     r5,r5,r0
;;;460               | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
;;;461    
;;;462      /* Write to SDIO DCTRL */
;;;463      SDIO->DCTRL = tmpreg;
0000e2  4801              LDR      r0,|L8.232|
0000e4  62c5              STR      r5,[r0,#0x2c]
;;;464    }
0000e6  bd70              POP      {r4-r6,pc}
;;;465    
                          ENDP

                  |L8.232|
                          DCD      0x40018000

                          AREA ||i.SDIO_DataStructInit||, CODE, READONLY, ALIGN=1

                  SDIO_DataStructInit PROC
;;;471      */
;;;472    void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
000000  f04f31ff          MOV      r1,#0xffffffff
;;;473    {
;;;474      /* SDIO_DataInitStruct members default value */
;;;475      SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
000004  6001              STR      r1,[r0,#0]
;;;476      SDIO_DataInitStruct->SDIO_DataLength = 0x00;
000006  2100              MOVS     r1,#0
000008  6041              STR      r1,[r0,#4]
;;;477      SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
00000a  6081              STR      r1,[r0,#8]
;;;478      SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
00000c  60c1              STR      r1,[r0,#0xc]
;;;479      SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
00000e  6101              STR      r1,[r0,#0x10]
;;;480      SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
000010  6141              STR      r1,[r0,#0x14]
;;;481    }
000012  4770              BX       lr
;;;482    
                          ENDP


                          AREA ||i.SDIO_DeInit||, CODE, READONLY, ALIGN=2

                  SDIO_DeInit PROC
;;;160      */
;;;161    void SDIO_DeInit(void)
000000  2000              MOVS     r0,#0
;;;162    {
;;;163      SDIO->POWER = 0x00000000;
000002  4906              LDR      r1,|L10.28|
000004  6008              STR      r0,[r1,#0]
;;;164      SDIO->CLKCR = 0x00000000;
000006  6048              STR      r0,[r1,#4]
;;;165      SDIO->ARG = 0x00000000;
000008  6088              STR      r0,[r1,#8]
;;;166      SDIO->CMD = 0x00000000;
00000a  60c8              STR      r0,[r1,#0xc]
;;;167      SDIO->DTIMER = 0x00000000;
00000c  6248              STR      r0,[r1,#0x24]
;;;168      SDIO->DLEN = 0x00000000;
00000e  6288              STR      r0,[r1,#0x28]
;;;169      SDIO->DCTRL = 0x00000000;
000010  62c8              STR      r0,[r1,#0x2c]
;;;170      SDIO->ICR = 0x00C007FF;
000012  4803              LDR      r0,|L10.32|
000014  6388              STR      r0,[r1,#0x38]
;;;171      SDIO->MASK = 0x00000000;
000016  2000              MOVS     r0,#0
000018  63c8              STR      r0,[r1,#0x3c]
;;;172    }
00001a  4770              BX       lr
;;;173    
                          ENDP

                  |L10.28|
                          DCD      0x40018000
                  |L10.32|
                          DCD      0x00c007ff

                          AREA ||i.SDIO_GetCommandResponse||, CODE, READONLY, ALIGN=2

                  SDIO_GetCommandResponse PROC
;;;396      */
;;;397    uint8_t SDIO_GetCommandResponse(void)
000000  4801              LDR      r0,|L11.8|
;;;398    {
;;;399      return (uint8_t)(SDIO->RESPCMD);
000002  6900              LDR      r0,[r0,#0x10]
000004  b2c0              UXTB     r0,r0
;;;400    }
000006  4770              BX       lr
;;;401    
                          ENDP

                  |L11.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetDataCounter||, CODE, READONLY, ALIGN=2

                  SDIO_GetDataCounter PROC
;;;487      */
;;;488    uint32_t SDIO_GetDataCounter(void)
000000  4801              LDR      r0,|L12.8|
;;;489    { 
;;;490      return SDIO->DCOUNT;
000002  6b00              LDR      r0,[r0,#0x30]
;;;491    }
000004  4770              BX       lr
;;;492    
                          ENDP

000006  0000              DCW      0x0000
                  |L12.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetFIFOCount||, CODE, READONLY, ALIGN=2

                  SDIO_GetFIFOCount PROC
;;;517      */
;;;518    uint32_t SDIO_GetFIFOCount(void)
000000  4801              LDR      r0,|L13.8|
;;;519    { 
;;;520      return SDIO->FIFOCNT;
000002  6c80              LDR      r0,[r0,#0x48]
;;;521    }
000004  4770              BX       lr
;;;522    
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  SDIO_GetFlagStatus PROC
;;;665      */
;;;666    FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
000000  b570              PUSH     {r4-r6,lr}
;;;667    { 
000002  4604              MOV      r4,r0
;;;668      FlagStatus bitstatus = RESET;
000004  2500              MOVS     r5,#0
;;;669      
;;;670      /* Check the parameters */
;;;671      assert_param(IS_SDIO_FLAG(SDIO_FLAG));
000006  2c01              CMP      r4,#1
000008  d03d              BEQ      |L14.134|
00000a  2c02              CMP      r4,#2
00000c  d03b              BEQ      |L14.134|
00000e  2c04              CMP      r4,#4
000010  d039              BEQ      |L14.134|
000012  2c08              CMP      r4,#8
000014  d037              BEQ      |L14.134|
000016  2c10              CMP      r4,#0x10
000018  d035              BEQ      |L14.134|
00001a  2c20              CMP      r4,#0x20
00001c  d033              BEQ      |L14.134|
00001e  2c40              CMP      r4,#0x40
000020  d031              BEQ      |L14.134|
000022  2c80              CMP      r4,#0x80
000024  d02f              BEQ      |L14.134|
000026  f5b47f80          CMP      r4,#0x100
00002a  d02c              BEQ      |L14.134|
00002c  f5b47f00          CMP      r4,#0x200
000030  d029              BEQ      |L14.134|
000032  f5b46f80          CMP      r4,#0x400
000036  d026              BEQ      |L14.134|
000038  f5b46f00          CMP      r4,#0x800
00003c  d023              BEQ      |L14.134|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d020              BEQ      |L14.134|
000044  f5b45f00          CMP      r4,#0x2000
000048  d01d              BEQ      |L14.134|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d01a              BEQ      |L14.134|
000050  f5b44f00          CMP      r4,#0x8000
000054  d017              BEQ      |L14.134|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d014              BEQ      |L14.134|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d011              BEQ      |L14.134|
000062  f5b42f80          CMP      r4,#0x40000
000066  d00e              BEQ      |L14.134|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d00b              BEQ      |L14.134|
00006e  f5b41f80          CMP      r4,#0x100000
000072  d008              BEQ      |L14.134|
000074  f5b41f00          CMP      r4,#0x200000
000078  d005              BEQ      |L14.134|
00007a  f5b40f80          CMP      r4,#0x400000
00007e  d002              BEQ      |L14.134|
000080  f5b40f00          CMP      r4,#0x800000
000084  d101              BNE      |L14.138|
                  |L14.134|
000086  2101              MOVS     r1,#1
000088  e000              B        |L14.140|
                  |L14.138|
00008a  2100              MOVS     r1,#0
                  |L14.140|
00008c  4608              MOV      r0,r1
00008e  f7fffffe          BL       assert_param
;;;672      
;;;673      if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
000092  4804              LDR      r0,|L14.164|
000094  6b40              LDR      r0,[r0,#0x34]
000096  4020              ANDS     r0,r0,r4
000098  b108              CBZ      r0,|L14.158|
;;;674      {
;;;675        bitstatus = SET;
00009a  2501              MOVS     r5,#1
00009c  e000              B        |L14.160|
                  |L14.158|
;;;676      }
;;;677      else
;;;678      {
;;;679        bitstatus = RESET;
00009e  2500              MOVS     r5,#0
                  |L14.160|
;;;680      }
;;;681      return bitstatus;
0000a0  4628              MOV      r0,r5
;;;682    }
0000a2  bd70              POP      {r4-r6,pc}
;;;683    
                          ENDP

                  |L14.164|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetITStatus||, CODE, READONLY, ALIGN=2

                  SDIO_GetITStatus PROC
;;;742      */
;;;743    ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
000000  b570              PUSH     {r4-r6,lr}
;;;744    { 
000002  4604              MOV      r4,r0
;;;745      ITStatus bitstatus = RESET;
000004  2500              MOVS     r5,#0
;;;746      
;;;747      /* Check the parameters */
;;;748      assert_param(IS_SDIO_GET_IT(SDIO_IT));
000006  2c01              CMP      r4,#1
000008  d03d              BEQ      |L15.134|
00000a  2c02              CMP      r4,#2
00000c  d03b              BEQ      |L15.134|
00000e  2c04              CMP      r4,#4
000010  d039              BEQ      |L15.134|
000012  2c08              CMP      r4,#8
000014  d037              BEQ      |L15.134|
000016  2c10              CMP      r4,#0x10
000018  d035              BEQ      |L15.134|
00001a  2c20              CMP      r4,#0x20
00001c  d033              BEQ      |L15.134|
00001e  2c40              CMP      r4,#0x40
000020  d031              BEQ      |L15.134|
000022  2c80              CMP      r4,#0x80
000024  d02f              BEQ      |L15.134|
000026  f5b47f80          CMP      r4,#0x100
00002a  d02c              BEQ      |L15.134|
00002c  f5b47f00          CMP      r4,#0x200
000030  d029              BEQ      |L15.134|
000032  f5b46f80          CMP      r4,#0x400
000036  d026              BEQ      |L15.134|
000038  f5b46f00          CMP      r4,#0x800
00003c  d023              BEQ      |L15.134|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d020              BEQ      |L15.134|
000044  f5b45f00          CMP      r4,#0x2000
000048  d01d              BEQ      |L15.134|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d01a              BEQ      |L15.134|
000050  f5b44f00          CMP      r4,#0x8000
000054  d017              BEQ      |L15.134|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d014              BEQ      |L15.134|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d011              BEQ      |L15.134|
000062  f5b42f80          CMP      r4,#0x40000
000066  d00e              BEQ      |L15.134|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d00b              BEQ      |L15.134|
00006e  f5b41f80          CMP      r4,#0x100000
000072  d008              BEQ      |L15.134|
000074  f5b41f00          CMP      r4,#0x200000
000078  d005              BEQ      |L15.134|
00007a  f5b40f80          CMP      r4,#0x400000
00007e  d002              BEQ      |L15.134|
000080  f5b40f00          CMP      r4,#0x800000
000084  d101              BNE      |L15.138|
                  |L15.134|
000086  2101              MOVS     r1,#1
000088  e000              B        |L15.140|
                  |L15.138|
00008a  2100              MOVS     r1,#0
                  |L15.140|
00008c  4608              MOV      r0,r1
00008e  f7fffffe          BL       assert_param
;;;749      if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
000092  4804              LDR      r0,|L15.164|
000094  6b40              LDR      r0,[r0,#0x34]
000096  4020              ANDS     r0,r0,r4
000098  b108              CBZ      r0,|L15.158|
;;;750      {
;;;751        bitstatus = SET;
00009a  2501              MOVS     r5,#1
00009c  e000              B        |L15.160|
                  |L15.158|
;;;752      }
;;;753      else
;;;754      {
;;;755        bitstatus = RESET;
00009e  2500              MOVS     r5,#0
                  |L15.160|
;;;756      }
;;;757      return bitstatus;
0000a0  4628              MOV      r0,r5
;;;758    }
0000a2  bd70              POP      {r4-r6,pc}
;;;759    
                          ENDP

                  |L15.164|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetPowerState||, CODE, READONLY, ALIGN=2

                  SDIO_GetPowerState PROC
;;;268      */
;;;269    uint32_t SDIO_GetPowerState(void)
000000  4802              LDR      r0,|L16.12|
;;;270    {
;;;271      return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
000002  6800              LDR      r0,[r0,#0]
000004  f0000003          AND      r0,r0,#3
;;;272    }
000008  4770              BX       lr
;;;273    
                          ENDP

00000a  0000              DCW      0x0000
                  |L16.12|
                          DCD      0x40018000

                          AREA ||i.SDIO_GetResponse||, CODE, READONLY, ALIGN=2

                  SDIO_GetResponse PROC
;;;411      */
;;;412    uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
000000  b538              PUSH     {r3-r5,lr}
;;;413    {
000002  4604              MOV      r4,r0
;;;414      __IO uint32_t tmp = 0;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;415    
;;;416      /* Check the parameters */
;;;417      assert_param(IS_SDIO_RESP(SDIO_RESP));
000008  b12c              CBZ      r4,|L17.22|
00000a  2c04              CMP      r4,#4
00000c  d003              BEQ      |L17.22|
00000e  2c08              CMP      r4,#8
000010  d001              BEQ      |L17.22|
000012  2c0c              CMP      r4,#0xc
000014  d101              BNE      |L17.26|
                  |L17.22|
000016  2101              MOVS     r1,#1
000018  e000              B        |L17.28|
                  |L17.26|
00001a  2100              MOVS     r1,#0
                  |L17.28|
00001c  4608              MOV      r0,r1
00001e  f7fffffe          BL       assert_param
;;;418    
;;;419      tmp = SDIO_RESP_ADDR + SDIO_RESP;
000022  4803              LDR      r0,|L17.48|
000024  4420              ADD      r0,r0,r4
000026  9000              STR      r0,[sp,#0]
;;;420      
;;;421      return (*(__IO uint32_t *) tmp); 
000028  9800              LDR      r0,[sp,#0]
00002a  6800              LDR      r0,[r0,#0]
;;;422    }
00002c  bd38              POP      {r3-r5,pc}
;;;423    
                          ENDP

00002e  0000              DCW      0x0000
                  |L17.48|
                          DCD      0x40018014

                          AREA ||i.SDIO_ITConfig||, CODE, READONLY, ALIGN=2

                  SDIO_ITConfig PROC
;;;306      */
;;;307    void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;308    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;309      /* Check the parameters */
;;;310      assert_param(IS_SDIO_IT(SDIO_IT));
000006  f004417f          AND      r1,r4,#0xff000000
00000a  b911              CBNZ     r1,|L18.18|
00000c  b10c              CBZ      r4,|L18.18|
00000e  2101              MOVS     r1,#1
000010  e000              B        |L18.20|
                  |L18.18|
000012  2100              MOVS     r1,#0
                  |L18.20|
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       assert_param
;;;311      assert_param(IS_FUNCTIONAL_STATE(NewState));
00001a  b10d              CBZ      r5,|L18.32|
00001c  2d01              CMP      r5,#1
00001e  d101              BNE      |L18.36|
                  |L18.32|
000020  2101              MOVS     r1,#1
000022  e000              B        |L18.38|
                  |L18.36|
000024  2100              MOVS     r1,#0
                  |L18.38|
000026  4608              MOV      r0,r1
000028  f7fffffe          BL       assert_param
;;;312      
;;;313      if (NewState != DISABLE)
00002c  b12d              CBZ      r5,|L18.58|
;;;314      {
;;;315        /* Enable the SDIO interrupts */
;;;316        SDIO->MASK |= SDIO_IT;
00002e  4806              LDR      r0,|L18.72|
000030  6bc0              LDR      r0,[r0,#0x3c]
000032  4320              ORRS     r0,r0,r4
000034  4904              LDR      r1,|L18.72|
000036  63c8              STR      r0,[r1,#0x3c]
000038  e004              B        |L18.68|
                  |L18.58|
;;;317      }
;;;318      else
;;;319      {
;;;320        /* Disable the SDIO interrupts */
;;;321        SDIO->MASK &= ~SDIO_IT;
00003a  4803              LDR      r0,|L18.72|
00003c  6bc0              LDR      r0,[r0,#0x3c]
00003e  43a0              BICS     r0,r0,r4
000040  4901              LDR      r1,|L18.72|
000042  63c8              STR      r0,[r1,#0x3c]
                  |L18.68|
;;;322      } 
;;;323    }
000044  bd70              POP      {r4-r6,pc}
;;;324    
                          ENDP

000046  0000              DCW      0x0000
                  |L18.72|
                          DCD      0x40018000

                          AREA ||i.SDIO_Init||, CODE, READONLY, ALIGN=2

                  SDIO_Init PROC
;;;180      */
;;;181    void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;182    {
000002  4604              MOV      r4,r0
;;;183      uint32_t tmpreg = 0;
000004  2500              MOVS     r5,#0
;;;184        
;;;185      /* Check the parameters */
;;;186      assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
000006  6821              LDR      r1,[r4,#0]
000008  b119              CBZ      r1,|L19.18|
00000a  6821              LDR      r1,[r4,#0]
00000c  f5b15f00          CMP      r1,#0x2000
000010  d101              BNE      |L19.22|
                  |L19.18|
000012  2101              MOVS     r1,#1
000014  e000              B        |L19.24|
                  |L19.22|
000016  2100              MOVS     r1,#0
                  |L19.24|
000018  4608              MOV      r0,r1
00001a  f7fffffe          BL       assert_param
;;;187      assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
00001e  6861              LDR      r1,[r4,#4]
000020  b119              CBZ      r1,|L19.42|
000022  6861              LDR      r1,[r4,#4]
000024  f5b16f80          CMP      r1,#0x400
000028  d101              BNE      |L19.46|
                  |L19.42|
00002a  2101              MOVS     r1,#1
00002c  e000              B        |L19.48|
                  |L19.46|
00002e  2100              MOVS     r1,#0
                  |L19.48|
000030  4608              MOV      r0,r1
000032  f7fffffe          BL       assert_param
;;;188      assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
000036  68a1              LDR      r1,[r4,#8]
000038  b119              CBZ      r1,|L19.66|
00003a  68a1              LDR      r1,[r4,#8]
00003c  f5b17f00          CMP      r1,#0x200
000040  d101              BNE      |L19.70|
                  |L19.66|
000042  2101              MOVS     r1,#1
000044  e000              B        |L19.72|
                  |L19.70|
000046  2100              MOVS     r1,#0
                  |L19.72|
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       assert_param
;;;189      assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
00004e  68e1              LDR      r1,[r4,#0xc]
000050  b139              CBZ      r1,|L19.98|
000052  68e1              LDR      r1,[r4,#0xc]
000054  f5b16f00          CMP      r1,#0x800
000058  d003              BEQ      |L19.98|
00005a  68e1              LDR      r1,[r4,#0xc]
00005c  f5b15f80          CMP      r1,#0x1000
000060  d101              BNE      |L19.102|
                  |L19.98|
000062  2101              MOVS     r1,#1
000064  e000              B        |L19.104|
                  |L19.102|
000066  2100              MOVS     r1,#0
                  |L19.104|
000068  4608              MOV      r0,r1
00006a  f7fffffe          BL       assert_param
;;;190      assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
00006e  6921              LDR      r1,[r4,#0x10]
000070  b119              CBZ      r1,|L19.122|
000072  6921              LDR      r1,[r4,#0x10]
000074  f5b14f80          CMP      r1,#0x4000
000078  d101              BNE      |L19.126|
                  |L19.122|
00007a  2101              MOVS     r1,#1
00007c  e000              B        |L19.128|
                  |L19.126|
00007e  2100              MOVS     r1,#0
                  |L19.128|
000080  4608              MOV      r0,r1
000082  f7fffffe          BL       assert_param
;;;191       
;;;192    /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
;;;193      /* Get the SDIO CLKCR value */
;;;194      tmpreg = SDIO->CLKCR;
000086  480a              LDR      r0,|L19.176|
000088  6845              LDR      r5,[r0,#4]
;;;195      
;;;196      /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
;;;197      tmpreg &= CLKCR_CLEAR_MASK;
00008a  f64760ff          MOV      r0,#0x7eff
00008e  4385              BICS     r5,r5,r0
;;;198      
;;;199      /* Set CLKDIV bits according to SDIO_ClockDiv value */
;;;200      /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
;;;201      /* Set BYPASS bit according to SDIO_ClockBypass value */
;;;202      /* Set WIDBUS bits according to SDIO_BusWide value */
;;;203      /* Set NEGEDGE bits according to SDIO_ClockEdge value */
;;;204      /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
;;;205      tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
000090  7d20              LDRB     r0,[r4,#0x14]
000092  68a1              LDR      r1,[r4,#8]
000094  4308              ORRS     r0,r0,r1
000096  6861              LDR      r1,[r4,#4]
000098  4308              ORRS     r0,r0,r1
00009a  68e1              LDR      r1,[r4,#0xc]
00009c  4308              ORRS     r0,r0,r1
00009e  6821              LDR      r1,[r4,#0]
0000a0  4308              ORRS     r0,r0,r1
0000a2  6921              LDR      r1,[r4,#0x10]
0000a4  4308              ORRS     r0,r0,r1
0000a6  4305              ORRS     r5,r5,r0
;;;206                 SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
;;;207                 SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
;;;208      
;;;209      /* Write to SDIO CLKCR */
;;;210      SDIO->CLKCR = tmpreg;
0000a8  4801              LDR      r0,|L19.176|
0000aa  6045              STR      r5,[r0,#4]
;;;211    }
0000ac  bd70              POP      {r4-r6,pc}
;;;212    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L19.176|
                          DCD      0x40018000

                          AREA ||i.SDIO_ReadData||, CODE, READONLY, ALIGN=2

                  SDIO_ReadData PROC
;;;497      */
;;;498    uint32_t SDIO_ReadData(void)
000000  4801              LDR      r0,|L20.8|
;;;499    { 
;;;500      return SDIO->FIFO;
000002  6800              LDR      r0,[r0,#0]
;;;501    }
000004  4770              BX       lr
;;;502    
                          ENDP

000006  0000              DCW      0x0000
                  |L20.8|
                          DCD      0x40018080

                          AREA ||i.SDIO_SendCEATACmd||, CODE, READONLY, ALIGN=2

                  SDIO_SendCEATACmd PROC
;;;626      */
;;;627    void SDIO_SendCEATACmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;628    { 
000002  4604              MOV      r4,r0
;;;629      /* Check the parameters */
;;;630      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L21.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L21.14|
                  |L21.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L21.16|
                  |L21.14|
00000e  2100              MOVS     r1,#0
                  |L21.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;631      
;;;632      *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
000016  4801              LDR      r0,|L21.28|
000018  6004              STR      r4,[r0,#0]
;;;633    }
00001a  bd10              POP      {r4,pc}
;;;634    
                          ENDP

                  |L21.28|
                          DCD      0x423001b8

                          AREA ||i.SDIO_SendCommand||, CODE, READONLY, ALIGN=2

                  SDIO_SendCommand PROC
;;;345      */
;;;346    void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;347    {
000002  4604              MOV      r4,r0
;;;348      uint32_t tmpreg = 0;
000004  2500              MOVS     r5,#0
;;;349      
;;;350      /* Check the parameters */
;;;351      assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
000006  6861              LDR      r1,[r4,#4]
000008  2940              CMP      r1,#0x40
00000a  d201              BCS      |L22.16|
00000c  2101              MOVS     r1,#1
00000e  e000              B        |L22.18|
                  |L22.16|
000010  2100              MOVS     r1,#0
                  |L22.18|
000012  4608              MOV      r0,r1
000014  f7fffffe          BL       assert_param
;;;352      assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
000018  68a1              LDR      r1,[r4,#8]
00001a  b129              CBZ      r1,|L22.40|
00001c  68a1              LDR      r1,[r4,#8]
00001e  2940              CMP      r1,#0x40
000020  d002              BEQ      |L22.40|
000022  68a1              LDR      r1,[r4,#8]
000024  29c0              CMP      r1,#0xc0
000026  d101              BNE      |L22.44|
                  |L22.40|
000028  2101              MOVS     r1,#1
00002a  e000              B        |L22.46|
                  |L22.44|
00002c  2100              MOVS     r1,#0
                  |L22.46|
00002e  4608              MOV      r0,r1
000030  f7fffffe          BL       assert_param
;;;353      assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
000034  68e1              LDR      r1,[r4,#0xc]
000036  b139              CBZ      r1,|L22.72|
000038  68e1              LDR      r1,[r4,#0xc]
00003a  f5b17f80          CMP      r1,#0x100
00003e  d003              BEQ      |L22.72|
000040  68e1              LDR      r1,[r4,#0xc]
000042  f5b17f00          CMP      r1,#0x200
000046  d101              BNE      |L22.76|
                  |L22.72|
000048  2101              MOVS     r1,#1
00004a  e000              B        |L22.78|
                  |L22.76|
00004c  2100              MOVS     r1,#0
                  |L22.78|
00004e  4608              MOV      r0,r1
000050  f7fffffe          BL       assert_param
;;;354      assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
000054  6921              LDR      r1,[r4,#0x10]
000056  f5b16f80          CMP      r1,#0x400
00005a  d001              BEQ      |L22.96|
00005c  6921              LDR      r1,[r4,#0x10]
00005e  b909              CBNZ     r1,|L22.100|
                  |L22.96|
000060  2101              MOVS     r1,#1
000062  e000              B        |L22.102|
                  |L22.100|
000064  2100              MOVS     r1,#0
                  |L22.102|
000066  4608              MOV      r0,r1
000068  f7fffffe          BL       assert_param
;;;355      
;;;356    /*---------------------------- SDIO ARG Configuration ------------------------*/
;;;357      /* Set the SDIO Argument value */
;;;358      SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
00006c  4908              LDR      r1,|L22.144|
00006e  6820              LDR      r0,[r4,#0]
000070  6088              STR      r0,[r1,#8]
;;;359      
;;;360    /*---------------------------- SDIO CMD Configuration ------------------------*/  
;;;361      /* Get the SDIO CMD value */
;;;362      tmpreg = SDIO->CMD;
000072  4608              MOV      r0,r1
000074  68c5              LDR      r5,[r0,#0xc]
;;;363      /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
;;;364      tmpreg &= CMD_CLEAR_MASK;
000076  f36f050a          BFC      r5,#0,#11
;;;365      /* Set CMDINDEX bits according to SDIO_CmdIndex value */
;;;366      /* Set WAITRESP bits according to SDIO_Response value */
;;;367      /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
;;;368      /* Set CPSMEN bits according to SDIO_CPSM value */
;;;369      tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
00007a  e9d40101          LDRD     r0,r1,[r4,#4]
00007e  4308              ORRS     r0,r0,r1
000080  68e1              LDR      r1,[r4,#0xc]
000082  4308              ORRS     r0,r0,r1
000084  6921              LDR      r1,[r4,#0x10]
000086  4308              ORRS     r0,r0,r1
000088  4305              ORRS     r5,r5,r0
;;;370               | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
;;;371      
;;;372      /* Write to SDIO CMD */
;;;373      SDIO->CMD = tmpreg;
00008a  4801              LDR      r0,|L22.144|
00008c  60c5              STR      r5,[r0,#0xc]
;;;374    }
00008e  bd70              POP      {r4-r6,pc}
;;;375    
                          ENDP

                  |L22.144|
                          DCD      0x40018000

                          AREA ||i.SDIO_SendSDIOSuspendCmd||, CODE, READONLY, ALIGN=2

                  SDIO_SendSDIOSuspendCmd PROC
;;;586      */
;;;587    void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;588    { 
000002  4604              MOV      r4,r0
;;;589      /* Check the parameters */
;;;590      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L23.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L23.14|
                  |L23.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L23.16|
                  |L23.14|
00000e  2100              MOVS     r1,#0
                  |L23.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;591      
;;;592      *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
000016  4801              LDR      r0,|L23.28|
000018  6004              STR      r4,[r0,#0]
;;;593    }
00001a  bd10              POP      {r4,pc}
;;;594    
                          ENDP

                  |L23.28|
                          DCD      0x423001ac

                          AREA ||i.SDIO_SetPowerState||, CODE, READONLY, ALIGN=2

                  SDIO_SetPowerState PROC
;;;250      */
;;;251    void SDIO_SetPowerState(uint32_t SDIO_PowerState)
000000  b510              PUSH     {r4,lr}
;;;252    {
000002  4604              MOV      r4,r0
;;;253      /* Check the parameters */
;;;254      assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
000004  b10c              CBZ      r4,|L24.10|
000006  2c03              CMP      r4,#3
000008  d101              BNE      |L24.14|
                  |L24.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L24.16|
                  |L24.14|
00000e  2100              MOVS     r1,#0
                  |L24.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;255      
;;;256      SDIO->POWER &= PWR_PWRCTRL_MASK;
000016  4805              LDR      r0,|L24.44|
000018  6800              LDR      r0,[r0,#0]
00001a  f0200003          BIC      r0,r0,#3
00001e  4903              LDR      r1,|L24.44|
000020  6008              STR      r0,[r1,#0]
;;;257      SDIO->POWER |= SDIO_PowerState;
000022  4608              MOV      r0,r1
000024  6800              LDR      r0,[r0,#0]
000026  4320              ORRS     r0,r0,r4
000028  6008              STR      r0,[r1,#0]
;;;258    }
00002a  bd10              POP      {r4,pc}
;;;259    
                          ENDP

                  |L24.44|
                          DCD      0x40018000

                          AREA ||i.SDIO_SetSDIOOperation||, CODE, READONLY, ALIGN=2

                  SDIO_SetSDIOOperation PROC
;;;572      */
;;;573    void SDIO_SetSDIOOperation(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;574    { 
000002  4604              MOV      r4,r0
;;;575      /* Check the parameters */
;;;576      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L25.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L25.14|
                  |L25.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L25.16|
                  |L25.14|
00000e  2100              MOVS     r1,#0
                  |L25.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;577      
;;;578      *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
000016  4801              LDR      r0,|L25.28|
000018  6004              STR      r4,[r0,#0]
;;;579    }
00001a  bd10              POP      {r4,pc}
;;;580    
                          ENDP

                  |L25.28|
                          DCD      0x423005ac

                          AREA ||i.SDIO_SetSDIOReadWaitMode||, CODE, READONLY, ALIGN=2

                  SDIO_SetSDIOReadWaitMode PROC
;;;558      */
;;;559    void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
000000  b510              PUSH     {r4,lr}
;;;560    {
000002  4604              MOV      r4,r0
;;;561      /* Check the parameters */
;;;562      assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
000004  2c01              CMP      r4,#1
000006  d000              BEQ      |L26.10|
000008  b90c              CBNZ     r4,|L26.14|
                  |L26.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L26.16|
                  |L26.14|
00000e  2100              MOVS     r1,#0
                  |L26.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;563      
;;;564      *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
000016  4801              LDR      r0,|L26.28|
000018  6004              STR      r4,[r0,#0]
;;;565    }
00001a  bd10              POP      {r4,pc}
;;;566    
                          ENDP

                  |L26.28|
                          DCD      0x423005a8

                          AREA ||i.SDIO_StartSDIOReadWait||, CODE, READONLY, ALIGN=2

                  SDIO_StartSDIOReadWait PROC
;;;528      */
;;;529    void SDIO_StartSDIOReadWait(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;530    { 
000002  4604              MOV      r4,r0
;;;531      /* Check the parameters */
;;;532      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L27.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L27.14|
                  |L27.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L27.16|
                  |L27.14|
00000e  2100              MOVS     r1,#0
                  |L27.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;533      
;;;534      *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
000016  4801              LDR      r0,|L27.28|
000018  6004              STR      r4,[r0,#0]
;;;535    }
00001a  bd10              POP      {r4,pc}
;;;536    
                          ENDP

                  |L27.28|
                          DCD      0x423005a0

                          AREA ||i.SDIO_StopSDIOReadWait||, CODE, READONLY, ALIGN=2

                  SDIO_StopSDIOReadWait PROC
;;;542      */
;;;543    void SDIO_StopSDIOReadWait(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;544    { 
000002  4604              MOV      r4,r0
;;;545      /* Check the parameters */
;;;546      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L28.10|
000006  2c01              CMP      r4,#1
000008  d101              BNE      |L28.14|
                  |L28.10|
00000a  2101              MOVS     r1,#1
00000c  e000              B        |L28.16|
                  |L28.14|
00000e  2100              MOVS     r1,#0
                  |L28.16|
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       assert_param
;;;547      
;;;548      *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
000016  4801              LDR      r0,|L28.28|
000018  6004              STR      r4,[r0,#0]
;;;549    }
00001a  bd10              POP      {r4,pc}
;;;550    
                          ENDP

                  |L28.28|
                          DCD      0x423005a4

                          AREA ||i.SDIO_StructInit||, CODE, READONLY, ALIGN=1

                  SDIO_StructInit PROC
;;;218      */
;;;219    void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
000000  2100              MOVS     r1,#0
;;;220    {
;;;221      /* SDIO_InitStruct members default value */
;;;222      SDIO_InitStruct->SDIO_ClockDiv = 0x00;
000002  7501              STRB     r1,[r0,#0x14]
;;;223      SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
000004  6001              STR      r1,[r0,#0]
;;;224      SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
000006  6041              STR      r1,[r0,#4]
;;;225      SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
000008  6081              STR      r1,[r0,#8]
;;;226      SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
00000a  60c1              STR      r1,[r0,#0xc]
;;;227      SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
00000c  6101              STR      r1,[r0,#0x10]
;;;228    }
00000e  4770              BX       lr
;;;229    
                          ENDP


                          AREA ||i.SDIO_WriteData||, CODE, READONLY, ALIGN=2

                  SDIO_WriteData PROC
;;;507      */
;;;508    void SDIO_WriteData(uint32_t Data)
000000  4901              LDR      r1,|L30.8|
;;;509    { 
;;;510      SDIO->FIFO = Data;
000002  6008              STR      r0,[r1,#0]
;;;511    }
000004  4770              BX       lr
;;;512    
                          ENDP

000006  0000              DCW      0x0000
                  |L30.8|
                          DCD      0x40018080
